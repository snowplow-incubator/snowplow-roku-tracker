import "pkg:/source/Helpers/MockNetworkConnection.bs"

import "pkg:/source/Snowplow/Internal/Emitter.bs"
import "pkg:/source/Snowplow/Internal/Configuration.bs"
import "pkg:/source/Snowplow/Internal/Structured.bs"

namespace tests

    @suite("Emitter tests")
    class EmitterTests extends Rooibos.BaseTestSuite

        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        @describe("sends request")
        '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

        @it("makes a get request")
        sub getRequest()
            configuration = new Snowplow.Internal.Configuration({
                network: {
                    collector: "collector",
                    method: "GET"
                }
            })
            connection = new MockNetworkConnection()
            emitter = new Snowplow.Internal.Emitter(configuration, connection)
            event = new Snowplow.Internal.Structured({
                se_ca: "theCategory",
                se_ac: "theAction"
            })
            emitter.add(event)

            m.assertEqual(1, connection.requests.count())
            request = connection.requests[0]
            m.assertEqual("GET", request.method)
            m.assertEqual("https://collector/i", request.url)
            m.assertEqual("theCategory", request.params.se_ca)
        end sub

        @it("makes a post request")
        sub postRequest()
            configuration = new Snowplow.Internal.Configuration({
                network: {
                    collector: "collector",
                    method: "POST"
                }
            })
            connection = new MockNetworkConnection()
            emitter = new Snowplow.Internal.Emitter(configuration, connection)
            event = new Snowplow.Internal.Structured({
                se_ca: "theCategory",
                se_ac: "theAction"
            })
            emitter.add(event)

            m.assertEqual(1, connection.requests.count())
            request = connection.requests[0]
            m.assertEqual("POST", request.method)
            m.assertEqual("https://collector/com.snowplowanalytics.snowplow/tp2", request.url)
            m.assertEqual("theCategory", request.body.data[0].se_ca)
        end sub

        @it("sets the retry count")
        sub setsRetryCount()
            configuration = new Snowplow.Internal.Configuration({
                network: {
                    collector: "collector",
                    method: "GET",
                    retryCount: 10
                }
            })
            connection = new MockNetworkConnection()
            emitter = new Snowplow.Internal.Emitter(configuration, connection)
            event = new Snowplow.Internal.Structured({
                se_ca: "theCategory",
                se_ac: "theAction"
            })
            emitter.add(event)

            request = connection.requests[0]
            m.assertEqual(10, request.retryCount)
        end sub

    end class
end namespace
